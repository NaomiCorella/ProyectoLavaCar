@model ProyectoLavacar.Abstraciones.Modelos.ModuloUsuarios.EmpleadoDto

@{
    ViewBag.Title = "Editar Usuario";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="~/Content/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/assets/fonts/fontawesome/css/all.min.css" rel="stylesheet" />
    <link href="~/Content/assets/css/animate.css" rel="stylesheet" />
    <link href="~/Content/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/assets/css/default.css" rel="stylesheet" />
    <link href="~/Content/assets/css/magnific-popup.css" rel="stylesheet" />
    <link href="~/Content/assets/css/slick.css" rel="stylesheet" />
    <link href="~/Content/assets/css/style.css" rel="stylesheet" />
    <link href="~/Content/assets/fonts/flaticon/flaticon.css" rel="stylesheet" />
    <link href="~/Content/assets/fonts/fontawesome/css/all.min.css" rel="stylesheet" />
    <style>

        form input,
        form select,
        form textarea {
            max-width: none;
            width: 100%;
        }
        :root {
            --primary-color: #45C4B0;
            --secondary-color: #9AEBA3;
            --dark-color: #012030;
            --light-color: #f8f9fa;
            --danger-color: #d32f2f;
            --gray-color: #6c757d;
        }

        body {
            background: linear-gradient(135deg, var(--light-color) 0%, #e9ecef 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            padding: 2rem 0;
        }

        .luxury-container {
            max-width: 900px;
            margin: 0 auto;
            padding: 0 15px;
        }

        .luxury-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .luxury-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            border-radius: 50%;
            color: white;
            box-shadow: 0 10px 30px rgba(69, 196, 176, 0.3);
            animation: float 4s ease-in-out infinite;
        }

        .luxury-title {
            font-size: 2rem;
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
        }

        .luxury-subtitle {
            color: var(--gray-color);
            font-size: 1.1rem;
        }

        .luxury-divider {
            width: 80px;
            height: 3px;
            background: linear-gradient(90deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            margin: 1.5rem auto;
            border-radius: 3px;
        }

        .luxury-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.08);
            padding: 2rem;
            margin-bottom: 2rem;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .form-label {
            font-weight: 500;
            color: var(--dark-color);
            margin-bottom: 0.5rem;
            display: block;
        }

        .input-group-luxury {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .input-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--primary-color);
            z-index: 2;
            width: 20px;
            height: 20px;
        }

        .input-container {
            position: relative;
            width: 100%;
        }

        .form-control-luxury {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 3rem;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background-color: rgba(255, 255, 255, 0.7);
            line-height: 1.5;
        }

            .form-control-luxury:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.25rem rgba(69, 196, 176, 0.1);
                outline: none;
                background-color: white;
            }

        .text-danger {
            color: var(--danger-color);
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }

        .btn-luxury {
            position: relative;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            overflow: hidden;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            margin: 0.5rem;
        }

        .btn-luxury-primary {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            box-shadow: 0 10px 20px rgba(69, 196, 176, 0.2);
        }

        .btn-luxury-secondary {
            background: linear-gradient(135deg, var(--gray-color) 0%, #adb5bd 100%);
            color: white;
            box-shadow: 0 10px 20px rgba(108, 117, 125, 0.2);
        }

        .btn-shine {
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn-luxury:hover {
            transform: translateY(-3px);
        }

            .btn-luxury:hover .btn-shine {
                left: 100%;
            }

        .btn-luxury-primary:hover {
            box-shadow: 0 15px 30px rgba(69, 196, 176, 0.3);
        }

        .btn-luxury-secondary:hover {
            box-shadow: 0 15px 30px rgba(108, 117, 125, 0.3);
        }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0);
            }

            50% {
                transform: translateY(-10px);
            }
        }

        @@media (max-width: 768px) {
            .luxury-container {
                padding: 0 1rem;
            }

            .luxury-title {
                font-size: 1.75rem;
            }

            .btn-group-responsive {
                display: flex;
                flex-direction: column;
                width: 100%;
            }

                .btn-group-responsive .btn-luxury {
                    width: 100%;
                    margin: 0.5rem 0;
                }

            .custom-editor {
                width: 100% !important; /* Hace que el campo de entrada ocupe todo el ancho disponible */
                padding: 10px; /* Ajusta el padding según necesites */
                font-size: 14px; /* Ajusta el tamaño de la fuente */
                box-sizing: border-box; /* Asegura que el padding no afecte el ancho total */
            }

            .form-group {
                width: 100%; /* Asegura que el contenedor ocupe todo el espacio disponible */
            }

        }
    </style>
</head>

<body>
    <div class="luxury-container">
        <div class="luxury-header">
            <div class="luxury-icon">
                <svg viewBox="0 0 24 24" width="40" height="40">
                    <path fill="currentColor" d="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                </svg>
            </div>
            <h1 class="luxury-title">Editar información</h1>
            <p class="luxury-subtitle">Actualiza la información del empleado</p>
            <div class="luxury-divider"></div>
        </div>

        <div class="luxury-card">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" />
                        </svg>
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control-luxury" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.primer_apellido, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" />
                        </svg>
                        @Html.EditorFor(model => model.primer_apellido, new { htmlAttributes = new { @class = "form-control-luxury custom-editor" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.primer_apellido, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.segundo_apellido, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" />
                        </svg>
                        @Html.EditorFor(model => model.segundo_apellido, new { htmlAttributes = new { @class = "form-control-luxury" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.segundo_apellido, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z" />
                        </svg>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control-luxury", type = "email" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z" />
                        </svg>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control-luxury", type = "tel" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.numeroCuenta, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M11,16V8A3,3 0 0,1 14,5H19V19H14A3,3 0 0,1 11,16M14,7A1,1 0 0,0 13,8V16A1,1 0 0,0 14,17H17V7H14M4,5H9V19H4V5M6,7V17H7V7H6Z" />
                        </svg>
                        @Html.EditorFor(model => model.numeroCuenta, new { htmlAttributes = new { @class = "form-control-luxury" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.numeroCuenta, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.turno, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" />
                        </svg>
                        @Html.EditorFor(model => model.turno, new { htmlAttributes = new { @class = "form-control-luxury" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.turno, "", new { @class = "text-danger" })
                </div>

                <div class="input-group-luxury">
                    @Html.LabelFor(model => model.puesto, htmlAttributes: new { @class = "form-label" })
                    <div class="input-container">
                        <svg class="input-icon" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M10,2H14A2,2 0 0,1 16,4V6H20A2,2 0 0,1 22,8V19A2,2 0 0,1 20,21H4C2.89,21 2,20.1 2,19V8C2,6.89 2.89,6 4,6H8V4C8,2.89 8.89,2 10,2M14,6V4H10V6H14Z" />
                        </svg>
                        @Html.EditorFor(model => model.puesto, new { htmlAttributes = new { @class = "form-control-luxury" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.puesto, "", new { @class = "text-danger" })
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn-luxury btn-luxury-primary">
                        <span class="button-text">Guardar Cambios</span>
                        <span class="button-icon">
                            <svg viewBox="0 0 24 24" width="20" height="20">
                                <path fill="currentColor" d="M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z" />
                            </svg>
                        </span>
                        <div class="btn-shine"></div>
                    </button>

                    <a href="@Url.Action("Index")" class="btn-luxury btn-luxury-secondary">
                        <span class="button-text">Cancelar</span>
                        <span class="button-icon">
                            <svg viewBox="0 0 24 24" width="20" height="20">
                                <path fill="currentColor" d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
                            </svg>
                        </span>
                        <div class="btn-shine"></div>
                    </a>
                </div>
            }
        </div>
    </div>

   

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/Scripts/Resenias/alertaCrear.js"></script>
    <script src="~/Content/assets/js/vendor/jquery-1.12.4.min.js"></script>
    <script src="~/Content/assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="~/Content/assets/js/bootstrap.min.js"></script>
    <script src="~/Content/assets/js/imagesloaded.pkgd.min.js"></script>
    <script src="~/Content/assets/js/isotope.pkgd.min.js"></script>
    <script src="~/Content/assets/js/jquery.counterup.min.js"></script>
    <script src="~/Content/assets/js/jquery.magnific-popup.min.js"></script>
    <script src="~/Content/assets/js/main.js"></script>
    <script src="~/Content/assets/js/popper.min.js"></script>
    <script src="~/Content/assets/js/slick.min.js"></script>
    <script src="~/Content/assets/js/waypoints.min.js"></script>
    <script src="~/Content/assets/js/wow.min.js"></script>
</body>
</html>