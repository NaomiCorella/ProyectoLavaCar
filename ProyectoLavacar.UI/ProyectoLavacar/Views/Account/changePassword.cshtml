@model ProyectoLavacar.Models.changePasswordViewModel

@{
    ViewBag.Title = "Cambiar Contraseña";
}

<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Cambiar Contraseña</title>
    <link href="~/Content/assets/css/animate.css" rel="stylesheet" />
    <link href="~/Content/assets/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/assets/css/default.css" rel="stylesheet" />
    <link href="~/Content/assets/css/magnific-popup.css" rel="stylesheet" />
    <link href="~/Content/assets/css/slick.css" rel="stylesheet" />
    <link href="~/Content/assets/css/style.css" rel="stylesheet" />
    <link href="~/Content/assets/fonts/flaticon/flaticon.css" rel="stylesheet" />
    <link href="~/Content/assets/fonts/fontawesome/css/all.min.css" rel="stylesheet" />
</head>

<body>
    <div class="luxury-review-container">
        <div class="container">
            <div class="section-title text-center">
                <div class="luxury-icon">
                    <svg viewBox="0 0 24 24">
                        <path fill="currentColor" d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.1 14.8,9.5V11C15.4,11 16,11.6 16,12.2V15.7C16,16.4 15.4,17 14.7,17H9.2C8.6,17 8,16.4 8,15.8V12.3C8,11.6 8.6,11 9.2,11V9.5C9.2,8.1 10.6,7 12,7M12,8.2C11.2,8.2 10.5,8.7 10.5,9.5V11H13.5V9.5C13.5,8.7 12.8,8.2 12,8.2Z" />
                    </svg>
                </div>
                <h2 class="luxury-title">Cambiar Contraseña</h2>
                <p class="luxury-subtitle">Actualiza tu contraseña de acceso</p>
                <div class="luxury-divider"></div>
            </div>

            <div class="luxury-card shadow-lg rounded">
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="luxury-form">
                            @Html.ValidationSummary(true, "", new { @class = "luxury-alert" })

                            <div class="form-group luxury-input-group">
                                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "input-label" })
                                <div class="input-container">
                                    <span class="input-icon">
                                        <svg viewBox="0 0 24 24">
                                            <path fill="currentColor" d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.1 14.8,9.5V11C15.4,11 16,11.6 16,12.2V15.7C16,16.4 15.4,17 14.7,17H9.2C8.6,17 8,16.4 8,15.8V12.3C8,11.6 8.6,11 9.2,11V9.5C9.2,8.1 10.6,7 12,7M12,8.2C11.2,8.2 10.5,8.7 10.5,9.5V11H13.5V9.5C13.5,8.7 12.8,8.2 12,8.2Z" />
                                        </svg>
                                    </span>
                                    @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "luxury-input", type = "password", required = "required", id = "OldPassword" } })
                                    <span class="input-border"></span>
                                    <span class="password-toggle" onclick="togglePassword('OldPassword')">
                                        <i class="far fa-eye"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "validation-message" })
                            </div>

                            <div class="form-group luxury-input-group">
                                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "input-label" })
                                <div class="input-container">
                                    <span class="input-icon">
                                        <svg viewBox="0 0 24 24">
                                            <path fill="currentColor" d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.1 14.8,9.5V11C15.4,11 16,11.6 16,12.2V15.7C16,16.4 15.4,17 14.7,17H9.2C8.6,17 8,16.4 8,15.8V12.3C8,11.6 8.6,11 9.2,11V9.5C9.2,8.1 10.6,7 12,7M12,8.2C11.2,8.2 10.5,8.7 10.5,9.5V11H13.5V9.5C13.5,8.7 12.8,8.2 12,8.2Z" />
                                        </svg>
                                    </span>
                                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "luxury-input", type = "password", required = "required", id = "NewPassword" } })
                                    <span class="input-border"></span>
                                    <span class="password-toggle" onclick="togglePassword('NewPassword')">
                                        <i class="far fa-eye"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "validation-message" })
                            </div>

                            <div class="form-group luxury-input-group">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "input-label" })
                                <div class="input-container">
                                    <span class="input-icon">
                                        <svg viewBox="0 0 24 24">
                                            <path fill="currentColor" d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.1 14.8,9.5V11C15.4,11 16,11.6 16,12.2V15.7C16,16.4 15.4,17 14.7,17H9.2C8.6,17 8,16.4 8,15.8V12.3C8,11.6 8.6,11 9.2,11V9.5C9.2,8.1 10.6,7 12,7M12,8.2C11.2,8.2 10.5,8.7 10.5,9.5V11H13.5V9.5C13.5,8.7 12.8,8.2 12,8.2Z" />
                                        </svg>
                                    </span>
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "luxury-input", type = "password", required = "required", id = "ConfirmPassword" } })
                                    <span class="input-border"></span>
                                    <span class="password-toggle" onclick="togglePassword('ConfirmPassword')">
                                        <i class="far fa-eye"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "validation-message" })
                            </div>

                            <div class="text-center mt-4">
                                <button type="submit" class="luxury-button">
                                    <span class="button-text">Actualizar Contraseña</span>
                                    <span class="button-icon">
                                        <svg viewBox="0 0 24 24">
                                            <path fill="currentColor" d="M17,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3M19,19H5V5H16.17L19,7.83V19M12,12C10.34,12 9,13.34 9,15C9,16.66 10.34,18 12,18C13.66,18 15,16.66 15,15C15,13.34 13.66,12 12,12M6,6H15V10H6V6Z" />
                                        </svg>
                                    </span>
                                    <div class="button-shine"></div>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="text-center mt-4">
                <a href="@Url.Action("Perfil")" class="luxury-link">
                    <span>Volver al inicio</span>
                    <svg viewBox="0 0 24 24" width="18" height="18" style="margin-left:8px;">
                        <path fill="currentColor" d="M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z" />
                    </svg>
                </a>
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script src="~/Content/assets/js/vendor/jquery-1.12.4.min.js"></script>
    <script src="~/Content/assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="~/Content/assets/js/bootstrap.min.js"></script>
    <script src="~/Content/assets/js/imagesloaded.pkgd.min.js"></script>
    <script src="~/Content/assets/js/isotope.pkgd.min.js"></script>
    <script src="~/Content/assets/js/jquery.counterup.min.js"></script>
    <script src="~/Content/assets/js/jquery.magnific-popup.min.js"></script>
    <script src="~/Content/assets/js/main.js"></script>
    <script src="~/Content/assets/js/popper.min.js"></script>
    <script src="~/Content/assets/js/slick.min.js"></script>
    <script src="~/Content/assets/js/waypoints.min.js"></script>
    <script src="~/Content/assets/js/wow.min.js"></script>

    <script>
        function togglePassword(fieldId) {
            const passwordField = document.getElementById(fieldId);
            const toggleIcon = passwordField.nextElementSibling.querySelector('i');

            if (passwordField.type === "password") {
                passwordField.type = "text";
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = "password";
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }
    </script>
</body>
</html>

<style>
    .luxury-review-container {
        padding: 40px 0;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        min-height: 100vh;
    }

    .section-title {
        margin-bottom: 40px;
        position: relative;
    }

    .luxury-icon {
        width: 80px;
        height: 80px;
        margin: 0 auto 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #45C4B0 0%, #9AEBA3 100%);
        border-radius: 50%;
        color: white;
        box-shadow: 0 10px 30px rgba(69, 196, 176, 0.3);
    }

        .luxury-icon svg {
            width: 40px;
            height: 40px;
        }

    .luxury-title {
        font-size: 32px;
        font-weight: 600;
        color: #012030;
        margin-bottom: 15px;
    }

    .luxury-subtitle {
        color: #6c757d;
        font-size: 18px;
        max-width: 600px;
        margin: 0 auto 20px;
    }

    .luxury-divider {
        width: 80px;
        height: 3px;
        background: linear-gradient(90deg, #45C4B0 0%, #9AEBA3 100%);
        margin: 20px auto;
        border-radius: 3px;
    }

    .luxury-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        max-width: 600px;
        margin: 0 auto;
        padding: 30px;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .luxury-form {
        padding: 20px;
    }

    .luxury-input-group {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        margin-bottom: 25px;
        max-width: 750px;
        margin: 0 auto 25px;
    }

    .input-label {
        flex: 0 0 200px; /* Ancho fijo para los labels */
        color: #495057;
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 0; /* Elimina el margen inferior */
        padding-right: 20px; /* Espacio entre label y input */
        text-align: right; /* Alinea el texto a la derecha */
    }

    .input-container {
        flex: 1; /* Ocupa el espacio restante */
        position: relative;
        min-width: 250px; /* Ancho mínimo para el input */
    }

    .input-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #45C4B0;
        z-index: 1;
    }

        .input-icon svg {
            width: 20px;
            height: 20px;
        }

    .luxury-input {
        width: 100%;
        padding: 15px 15px 15px 50px;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        font-size: 15px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.7);
        color: #495057;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.03);
    }

        .luxury-input:focus {
            border-color: #45C4B0;
            box-shadow: 0 0 0 3px rgba(69, 196, 176, 0.1);
            outline: none;
            background-color: white;
        }

    .input-border {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(90deg, #45C4B0 0%, #9AEBA3 100%);
        transition: width 0.4s ease;
    }

    .luxury-input:focus ~ .input-border {
        width: 100%;
    }

    .password-toggle {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
        cursor: pointer;
        z-index: 2;
    }

        .password-toggle:hover {
            color: #45C4B0;
        }

    .validation-message {
        display: block;
        color: #d32f2f;
        font-size: 13px;
        margin-top: 5px;
    }

    .luxury-alert {
        padding: 15px;
        background: #fff4f4;
        color: #d32f2f;
        border-radius: 10px;
        margin-bottom: 25px;
        border: 1px solid #ffcdd2;
        font-size: 14px;
        text-align: center;
    }

    .luxury-button {
        position: relative;
        width: 100%;
        max-width: 300px;
        padding: 16px;
        background: linear-gradient(135deg, #45C4B0 0%, #9AEBA3 100%);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        overflow: hidden;
        transition: all 0.4s ease;
        box-shadow: 0 10px 20px rgba(69, 196, 176, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        margin: 20px auto 0;
    }

    .button-text {
        position: relative;
        z-index: 2;
    }

    .button-icon {
        position: relative;
        z-index: 2;
        display: flex;
        transition: transform 0.3s ease;
    }

        .button-icon svg {
            width: 20px;
            height: 20px;
        }

    .button-shine {
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.6s ease;
    }

    .luxury-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 30px rgba(69, 196, 176, 0.3);
    }

        .luxury-button:hover .button-shine {
            left: 100%;
        }

        .luxury-button:hover .button-icon {
            transform: translateX(5px);
        }

    .luxury-link {
        color: #45C4B0;
        font-weight: 500;
        text-decoration: none;
        transition: color 0.3s ease;
        position: relative;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .luxury-link:hover {
            color: #13578A;
        }

        .luxury-link::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 1px;
            background: #45C4B0;
            transition: width 0.3s ease;
        }

        .luxury-link:hover::after {
            width: 100%;
        }

    /* Animaciones */
    @@keyframes float {
        0%, 100% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-10px);
        }
    }

    .luxury-icon {
        animation: float 4s ease-in-out infinite;
    }

    @@media (max-width: 768px) {
        .luxury-card {
            padding: 20px;
        }

        .luxury-title {
            font-size: 28px;
        }

        .luxury-subtitle {
            font-size: 16px;
        }

        .luxury-input-group {
            flex-direction: column;
            align-items: flex-start;
        }

        .input-label {
            flex: 0 0 auto;
            width: 100%;
            text-align: left;
            margin-bottom: 10px;
            padding-right: 0;
        }

        .input-container {
            width: 100%;
        }
    }
